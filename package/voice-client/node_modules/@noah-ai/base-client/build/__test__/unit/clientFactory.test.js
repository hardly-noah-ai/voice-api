"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const src_1 = require("../../src");
const createNewClient = jest.fn((input) => `${input} client`);
class TestClientFactory extends src_1.ClientFactory {
    constructor() {
        super(...arguments);
        this.createNewClient = createNewClient;
    }
    transformInputToClientStoreKey(input) {
        return input;
    }
}
describe('ClientFactory', () => {
    let undertest;
    beforeEach(() => {
        jest.clearAllMocks();
        undertest = new TestClientFactory();
    });
    test('should return client', () => {
        const result = undertest.getClient('test');
        expect(createNewClient).toHaveBeenCalledTimes(1);
        expect(createNewClient).toHaveBeenCalledWith('test');
        expect(result).toStrictEqual('test client');
    });
    test('should create a new client if different client store key', () => {
        expect(undertest.getClient('test')).not.toStrictEqual(undertest.getClient('not_test'));
        expect(createNewClient).toHaveBeenCalledTimes(2);
        expect(createNewClient).toHaveBeenCalledWith('test');
        expect(createNewClient).toHaveBeenCalledWith('not_test');
    });
    test('should return the same client from the store if same client store key', () => {
        expect(undertest.getClient('test')).toStrictEqual(undertest.getClient('test'));
        expect(createNewClient).toBeCalledTimes(1);
        expect(createNewClient).toBeCalledWith('test');
    });
});
//# sourceMappingURL=clientFactory.test.js.map