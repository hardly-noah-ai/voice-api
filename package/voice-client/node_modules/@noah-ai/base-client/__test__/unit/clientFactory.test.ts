import { ClientFactory } from '../../src';

const createNewClient = jest.fn((input: string) => `${input} client`);
class TestClientFactory extends ClientFactory<string, string> {
  protected transformInputToClientStoreKey(input: string): string {
    return input;
  }
  protected createNewClient = createNewClient;
}

describe('ClientFactory', () => {
  let undertest: TestClientFactory;

  beforeEach(() => {
    jest.clearAllMocks();
    undertest = new TestClientFactory();
  });

  test('should return client', () => {
    const result = undertest.getClient('test');
    expect(createNewClient).toHaveBeenCalledTimes(1);
    expect(createNewClient).toHaveBeenCalledWith('test');
    expect(result).toStrictEqual('test client');
  });

  test('should create a new client if different client store key', () => {
    expect(undertest.getClient('test')).not.toStrictEqual(
      undertest.getClient('not_test'),
    );
    expect(createNewClient).toHaveBeenCalledTimes(2);
    expect(createNewClient).toHaveBeenCalledWith('test');
    expect(createNewClient).toHaveBeenCalledWith('not_test');
  });

  test('should return the same client from the store if same client store key', () => {
    expect(undertest.getClient('test')).toStrictEqual(
      undertest.getClient('test'),
    );
    expect(createNewClient).toBeCalledTimes(1);
    expect(createNewClient).toBeCalledWith('test');
  });
});
