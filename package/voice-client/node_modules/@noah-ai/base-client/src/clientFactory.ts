export abstract class ClientFactory<TClient, TGetClientInput> {
  private client_store = new Map<string, TClient>();

  public getClient(input: TGetClientInput): TClient {
    const clientStoreKey = this.transformInputToClientStoreKey(input);
    const storedClient = this.client_store.get(clientStoreKey);
    if (storedClient) {
      return storedClient;
    }
    const client = this.createNewClient(input);
    this.client_store.set(clientStoreKey, client);
    return client;
  }

  protected abstract transformInputToClientStoreKey(
    input: TGetClientInput,
  ): string;

  protected abstract createNewClient(input: TGetClientInput): TClient;
}
